version: '3'
services:
  lojaA:
    image: postgres:15
    container_name: asi_lojaA
    restart: always
    ports:
      - "5433:5432"
    environment:
      POSTGRES_PASSWORD: asi_lojaA
      POSTGRES_DB: lojaAdb
    volumes:
      - ./replication/data_lojaA:/var/lib/postgresql/data
      - ./replication/my-postgres.conf:/etc/postgresql/postgresql.conf
      - ./replication/pg_hba.conf:/etc/postgresql/pg_hba.conf
      - ./replication/setup-masterlojaAdb:/docker-entrypoint-initdb.d
    command: postgres -c config_file=/etc/postgresql/postgresql.conf
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  lojaB:
    image: postgres:15
    container_name: asi_lojaB
    restart: always
    ports:
      - "5434:5432"
    environment:
      POSTGRES_PASSWORD: asi_lojaB
      POSTGRES_DB: lojaBdb
    volumes:
      - ./replication/data_lojaB:/var/lib/postgresql/data
      - ./replication/my-postgres.conf:/etc/postgresql/postgresql.conf
      - ./replication/pg_hba.conf:/etc/postgresql/pg_hba.conf
      - ./replication/setup-masterlojaBdb:/docker-entrypoint-initdb.d
    command: postgres -c config_file=/etc/postgresql/postgresql.conf
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  headquarters:
    image: postgres:15
    container_name: asi_headquarters
    restart: always
    depends_on:
      lojaA:
        condition: service_healthy
      lojaB:
        condition: service_healthy
    ports:
      - "5435:5432"
    environment:
      POSTGRES_PASSWORD: asi_headquarters
      POSTGRES_DB: headquartersdb
    volumes:
      - ./replication/data_headquarters:/var/lib/postgresql/data
      - ./replication/pg_hba.conf:/etc/postgresql/pg_hba.conf
      - ./replication/my-postgres.conf:/etc/postgresql/postgresql.conf
      - ./replication/setup-masterheadquarters:/docker-entrypoint-initdb.d
    command: postgres -c config_file=/etc/postgresql/postgresql.conf
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
  
  databasePayment:
    image: postgres:15
    container_name: payment_db
    restart: always
    ports:
      - 5450:5432
    command: postgres -c config_file=/etc/postgresql/postgresql.conf
    volumes:
      - ./service/payment/data:/var/lib/postgresql/data
      - ./service/payment/my-postgres.conf:/etc/postgresql/postgresql.conf
      - ./service/payment/setup-master:/docker-entrypoint-initdb.d
    environment:
      - 'POSTGRES_PASSWORD=a_passwd234'
      - 'POSTGRES_DB=payment_service'
    healthcheck: 
       test: ["CMD-SHELL", "pg_isready -U postgres"]
       interval: 10s
       timeout: 5s
       retries: 5

  databaseOrder:
    image: postgres:15
    container_name: order_db
    restart: always
    ports:
      - "127.0.0.1:5432:5432"
    command: postgres -c config_file=/etc/postgresql/postgresql.conf
    volumes:
      - ./service/order/data:/var/lib/postgresql/data
      - ./service/order/my-postgres.conf:/etc/postgresql/postgresql.conf
      - ./service/order/setup-master:/docker-entrypoint-initdb.d
    environment:
      - 'POSTGRES_PASSWORD=a_passwd234'
      - 'POSTGRES_DB=order_service'
    healthcheck: 
       test: ["CMD-SHELL", "pg_isready -U postgres"]
       interval: 10s
       timeout: 5s
       retries: 5
  
  storeDA-service:
    image: imagestorea
    restart: always
    container_name: storeDA-service
    ports:
      - 8086:8086
    depends_on:
      lojaA:
        condition: service_healthy
    healthcheck: 
       test: ["CMD", "curl", "-f", "http://localhost:8086/store-db-service/healthy"] 
       interval: 10s
       timeout: 5s
       retries: 5

  storeDB-service:
    image: imagestoreb
    restart: always
    container_name: storeDB-service
    ports:
      - 8085:8085
    depends_on:
      lojaB:
        condition: service_healthy
    healthcheck: 
       test: ["CMD", "curl", "-f", "http://localhost:8085/store-db-service/healthy"] 
       interval: 10s
       timeout: 5s
       retries: 5

  stockGlobal-service:
    image: imagestockglobal
    restart: always
    container_name: stockGlobal-service
    ports:
      - 8087:8087
    depends_on:
      headquarters:
        condition: service_healthy
      storeDB-service:
        condition: service_healthy
      storeDA-service:
        condition: service_healthy
    healthcheck: 
       test: ["CMD", "curl", "-f", "http://localhost:8087/store-db-service/healthy"] 
       interval: 10s
       timeout: 5s
       retries: 5

  payment-service:
    image: imagepaymment
    restart: always
    container_name: payment-service
    ports:
      - 8040:8040
    depends_on:
      databasePayment:
        condition: service_healthy
    healthcheck:
       test: ["CMD", "curl", "-f", "http://localhost:8040/payment-service/healthy"]  
       interval: 10s
       timeout: 5s
       retries: 5

  order-service:
    image: imageorder
    restart: always
    container_name: order-service
    ports:
      - 8088:8088
    depends_on:
      databaseOrder:
        condition: service_healthy
      payment-service:
        condition: service_healthy
      stockGlobal-service:
        condition: service_healthy